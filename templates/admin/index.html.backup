{% extends "admin/index.html" %}
{% load static %}
{% load math_filters %}

{% block extrahead %}
{{ block.super }}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<style>
    /* Analytics Dashboard Styles */
    .analytics-dashboard {
        background: var(--body-bg);
        margin: 0 0 30px 0;
        padding: 0;
    }
    
    .analytics-title {
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 25px;
        color: var(--body-fg);
        padding: 20px;
        background: var(--darkened-bg);
        border-left: 5px solid #e14d2a;
        border-radius: 4px;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .stat-card {
        background: var(--darkened-bg);
        padding: 25px;
        border-radius: 8px;
        border-left: 5px solid #e14d2a;
        text-align: center;
        transition: transform 0.2s, box-shadow 0.2s;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }
    
    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 12px rgba(225, 77, 42, 0.2);
    }
    
    .stat-card.secondary {
        border-left-color: #4CAF50;
    }
    
    .stat-card.info {
        border-left-color: #2196F3;
    }
    
    .stat-card.warning {
        border-left-color: #FF9800;
    }
    
    .stat-label {
        font-size: 11px;
        color: var(--body-quiet-color);
        text-transform: uppercase;
        font-weight: 700;
        letter-spacing: 0.5px;
        margin-bottom: 12px;
    }
    
    .stat-value {
        font-size: 32px;
        font-weight: 800;
        color: var(--body-fg);
        line-height: 1;
        margin-bottom: 8px;
    }
    
    .stat-subtext {
        font-size: 12px;
        color: var(--body-quiet-color);
        margin-top: 8px;
    }
    
    .charts-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));
        gap: 25px;
        margin-bottom: 30px;
    }
    
    .chart-card {
        background: var(--darkened-bg);
        padding: 25px;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border-top: 3px solid #e14d2a;
    }
    
    .chart-card h3 {
        margin: 0 0 20px 0;
        font-size: 18px;
        font-weight: 600;
        color: var(--body-fg);
    }
    
    .chart-container {
        position: relative;
        height: 280px;
    }
    
    .table-section {
        background: var(--darkened-bg);
        border-radius: 8px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border-top: 3px solid #e14d2a;
    }
    
    .table-section h3 {
        margin: 0 0 20px 0;
        font-size: 18px;
        font-weight: 600;
        color: var(--body-fg);
        padding-bottom: 12px;
        border-bottom: 2px solid var(--hairline-color);
    }
    
    .analytics-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }
    
    .analytics-table th {
        background-color: var(--selected-bg);
        padding: 12px;
        text-align: left;
        font-weight: 600;
        color: var(--body-fg);
        border-bottom: 2px solid var(--hairline-color);
        font-size: 13px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .analytics-table td {
        padding: 12px;
        border-bottom: 1px solid var(--hairline-color);
        color: var(--body-fg);
    }
    
    .analytics-table tr:hover {
        background-color: var(--selected-bg);
    }
    
    .status-badge {
        display: inline-block;
        padding: 3px 10px;
        border-radius: 20px;
        font-size: 11px;
        font-weight: 600;
        text-transform: uppercase;
    }
    
    .status-pending {
        background-color: #fff3cd;
        color: #856404;
    }
    
    .status-confirmed {
        background-color: #d4edda;
        color: #155724;
    }
    
    .status-completed {
        background-color: #d1ecf1;
        color: #0c5460;
    }
    
    .status-cancelled {
        background-color: #f8d7da;
        color: #721c24;
    }
    
    .top-performers {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 25px;
    }
    
    .performer-card {
        background: var(--selected-bg);
        padding: 20px;
        border-radius: 6px;
        border-left: 4px solid #e14d2a;
    }
    
    .performer-card h4 {
        margin: 0 0 15px 0;
        font-size: 15px;
        font-weight: 600;
        color: var(--body-fg);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .performer-item {
        padding: 10px 0;
        border-bottom: 1px solid var(--hairline-color);
        display: flex;
        justify-content: space-between;
        font-size: 14px;
    }
    
    .performer-item:last-child {
        border-bottom: none;
    }
    
    .performer-name {
        color: var(--body-fg);
        font-weight: 500;
    }
    
    .performer-value {
        color: #e14d2a;
        font-weight: 700;
    }
    
        .dashboard-divider {
        margin: 40px 0;
        border: none;
        border-top: 3px solid var(--primary);
    }
    
    /* Dashboard Tabs */
    .dashboard-tabs {
        display: flex;
        gap: 5px;
        margin-bottom: 30px;
        border-bottom: 2px solid #e0e0e0;
        padding-bottom: 0;
    }
    
    .tab-button {
        background: transparent;
        border: none;
        padding: 12px 24px;
        font-size: 14px;
        font-weight: 600;
        color: #666;
        cursor: pointer;
        border-bottom: 3px solid transparent;
        transition: all 0.3s ease;
        margin-bottom: -2px;
    }
    
    .tab-button:hover {
        color: #e14d2a;
        background: rgba(225, 77, 42, 0.05);
    }
    
    .tab-button.active {
        color: #e14d2a;
        border-bottom-color: #e14d2a;
        background: rgba(225, 77, 42, 0.1);
    }
    
    .tab-content {
        display: none;
        animation: fadeIn 0.3s ease;
    }
    
    .tab-content.active {
        display: block;
    }
    
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>
    
    /* Admin Apps Section Styling */
    #content-main > div {
        margin-top: 20px;
    }
</style>
{% endblock %}

{% block content %}
<!-- Analytics Dashboard Section -->
<div class="analytics-dashboard">
    <div class="analytics-title">RIVI√àRE RV PARK - Analytics Dashboard</div>
    
    <!-- Dashboard Tabs Navigation -->
    <div class="dashboard-tabs">
        <button class="tab-button active" data-tab="overview">Overview</button>
        <button class="tab-button" data-tab="bookings">Bookings Analysis</button>
        <button class="tab-button" data-tab="revenue">Revenue Analytics</button>
        <button class="tab-button" data-tab="sites">Site Performance</button>
    </div>
    
    <!-- Tab Content: Overview -->
    <div class="tab-content active" id="overview-tab">
    <!-- Key Performance Indicators -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-label">üí∞ Total Revenue</div>
            <div class="stat-value">${{ total_revenue|floatformat:0 }}</div>
            <div class="stat-subtext">All-time earnings</div>
        </div>
        
        <div class="stat-card secondary">
            <div class="stat-label">üìÖ Total Bookings</div>
            <div class="stat-value">{{ total_bookings }}</div>
            <div class="stat-subtext">All time</div>
        </div>
        
        <div class="stat-card info">
            <div class="stat-label">üèïÔ∏è RV Sites</div>
            <div class="stat-value">{{ total_lands }}</div>
            <div class="stat-subtext">Total available</div>
        </div>
        
        <div class="stat-card warning">
            <div class="stat-label">‚è≥ Pending</div>
            <div class="stat-value">{{ pending_bookings }}</div>
            <div class="stat-subtext">Awaiting confirmation</div>
        </div>
        
        <div class="stat-card secondary">
            <div class="stat-label">üìä Occupancy</div>
            <div class="stat-value">{{ occupancy_rate }}%</div>
            <div class="stat-subtext">Last 30 days</div>
        </div>
        
        <div class="stat-card info">
            <div class="stat-label">üíµ Avg Value</div>
            <div class="stat-value">${{ avg_booking_value|floatformat:0 }}</div>
            <div class="stat-subtext">Per booking</div>
        </div>
    </div>
    
    <!-- Period Performance -->
    <div class="stats-grid">
        <div class="stat-card">
            <div class="stat-label">üìà 30-Day Revenue</div>
            <div class="stat-value">${{ revenue_30|floatformat:0 }}</div>
            <div class="stat-subtext">{{ bookings_30_count }} bookings</div>
        </div>
        
        <div class="stat-card">
            <div class="stat-label">üìà 90-Day Revenue</div>
            <div class="stat-value">${{ revenue_90|floatformat:0 }}</div>
            <div class="stat-subtext">{{ bookings_90_count }} bookings</div>
        </div>
        
        <div class="stat-card secondary">
            <div class="stat-label">‚è±Ô∏è Avg Stay</div>
            <div class="stat-value">{{ avg_booking_nights }}</div>
            <div class="stat-subtext">Average duration</div>
        </div>
    </div>
    </div>
    
    <!-- Tab Content: Bookings Analysis -->
    <div class="tab-content" id="bookings-tab">
    
    <!-- Charts -->
    <div class="charts-container">
        <div class="chart-card">
            <h3>Booking Timeline (30 Days)</h3>
            <div class="chart-container">
                <canvas id="bookingChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <h3>Revenue Timeline (30 Days)</h3>
            <div class="chart-container">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <h3>Booking Status</h3>
            <div class="chart-container">
                <canvas id="statusChart"></canvas>
            </div>
        </div>
        
        <div class="chart-card">
            <h3>Site Status</h3>
            <div class="chart-container">
                <canvas id="landStatusChart"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Recent Bookings -->
    <div class="table-section">
        <h3>üìã Recent Bookings</h3>
        <div class="top-performers">
            <div class="performer-card">
                <h4>Top Sites by Bookings</h4>
                {% for land in top_lands %}
                <div class="performer-item">
                    <span class="performer-name">{{ land.name }}</span>
                    <span class="performer-value">{{ land.booking_count }}</span>
                </div>
                {% empty %}
                <p style="color: #999;">No data</p>
                {% endfor %}
            </div>
            
            <div class="performer-card">
                <h4>Top Sites by Revenue</h4>
                {% for land in top_lands_revenue %}
                <div class="performer-item">
                    <span class="performer-name">{{ land.name }}</span>
                    <span class="performer-value">${{ land.total_revenue|floatformat:0 }}</span>
                </div>
                {% empty %}
                <p style="color: #999;">No data</p>
                {% endfor %}
            </div>
        </div>
    </div>
    
    <!-- Recent Bookings -->
    <div class="table-section">
        <h3>üìã Recent Bookings</h3>
        <table class="analytics-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Guest</th>
                    <th>Site</th>
                    <th>Check-in</th>
                    <th>Total</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                {% for booking in recent_bookings %}
                <tr>
                    <td>#{{ booking.id }}</td>
                    <td>{{ booking.guest_name }}</td>
                    <td>{{ booking.land.name }}</td>
                    <td>{{ booking.check_in|date:"M d" }}</td>
                    <td>${{ booking.total_price|floatformat:0 }}</td>
                    <td><span class="status-badge status-{{ booking.status|lower }}">{{ booking.get_status_display }}</span></td>
                </tr>
                {% empty %}
                <tr><td colspan="6" style="text-align: center; color: #999;">No recent bookings</td></tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    
    <!-- Upcoming Bookings -->
    <div class="table-section">
        <h3>üìÖ Upcoming Bookings (30 Days)</h3>
        <table class="analytics-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Guest</th>
                    <th>Site</th>
                    <th>Check-in</th>
                    <th>Duration</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                {% for booking in upcoming_bookings %}
                <tr>
                    <td>#{{ booking.id }}</td>
                    <td>{{ booking.guest_name }}</td>
                    <td>{{ booking.land.name }}</td>
                    <td>{{ booking.check_in|date:"M d, Y" }}</td>
                    <td>{{ booking.total_nights }} nights</td>
                    <td><span class="status-badge status-{{ booking.status|lower }}">{{ booking.get_status_display }}</span></td>
                </tr>
                {% empty %}
                <tr><td colspan="6" style="text-align: center; color: #999;">No upcoming bookings</td></tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    </div>
    
    <!-- Tab Content: Revenue Analytics -->
    <div class="tab-content" id="revenue-tab">
        <div class="charts-container">
            <div class="chart-card" style="grid-column: 1 / -1;">
                <h3>Revenue Timeline (30 Days)</h3>
                <div class="chart-container" style="height: 350px;">
                    <canvas id="revenueChart2"></canvas>
                </div>
            </div>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-label">üí∞ Total Revenue</div>
                <div class="stat-value">${{ total_revenue|floatformat:0 }}</div>
                <div class="stat-subtext">All-time confirmed bookings</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">üìà Revenue (30 Days)</div>
                <div class="stat-value">${{ revenue_30|floatformat:0 }}</div>
                <div class="stat-subtext">{{ bookings_30_count }} bookings</div>
            </div>
            <div class="stat-card">
                <div class="stat-label">üìà Revenue (90 Days)</div>
                <div class="stat-value">${{ revenue_90|floatformat:0 }}</div>
                <div class="stat-subtext">{{ bookings_90_count }} bookings</div>
            </div>
            <div class="stat-card info">
                <div class="stat-label">üíµ Avg Booking Value</div>
                <div class="stat-value">${{ avg_booking_value|floatformat:0 }}</div>
                <div class="stat-subtext">Average per booking</div>
            </div>
        </div>
    </div>
    
    <!-- Tab Content: Site Performance -->
    <div class="tab-content" id="sites-tab">
        <!-- Top Performers -->
        <div class="table-section">
            <h3>‚≠ê Top Performing Sites</h3>
            <div class="top-performers">
                <div class="performer-card">
                    <h4>Top Sites by Bookings</h4>
                    {% for land in top_lands %}
                    <div class="performer-item">
                        <span class="performer-name">{{ land.name }}</span>
                        <span class="performer-value">{{ land.booking_count }}</span>
                    </div>
                    {% empty %}
                    <p style="color: #999;">No data</p>
                    {% endfor %}
                </div>
                
                <div class="performer-card">
                    <h4>Top Sites by Revenue</h4>
                    {% for land in top_lands_revenue %}
                    <div class="performer-item">
                        <span class="performer-name">{{ land.name }}</span>
                        <span class="performer-value">${{ land.total_revenue|floatformat:0 }}</span>
                    </div>
                    {% empty %}
                    <p style="color: #999;">No data</p>
                    {% endfor %}
                </div>
            </div>
        </div>
        
        <div class="charts-container">
            <div class="chart-card">
                <h3>Site Status Distribution</h3>
                <div class="chart-container">
                    <canvas id="landStatusChart2"></canvas>
                </div>
            </div>
        </div>
    </div>
    
    <hr class="dashboard-divider">
</div>

<!-- Standard Django Admin Apps -->
{{ block.super }}
{% endblock %}

{% block footer %}
{{ block.super }}
<script>
    const primaryColor = '#e14d2a';
    const successColor = '#4CAF50';
    const warningColor = '#FF9800';
    const infoColor = '#2196F3';
    
    // Booking Timeline
    const bookingCtx = document.getElementById('bookingChart')?.getContext('2d');
    if (bookingCtx) {
        const bookingData = {{ booking_timeline|safe }};
        new Chart(bookingCtx, {
            type: 'line',
            data: {
                labels: bookingData.map(d => d.date),
                datasets: [{
                    label: 'Bookings Created',
                    data: bookingData.map(d => d.count),
                    borderColor: primaryColor,
                    backgroundColor: primaryColor + '20',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4,
                    pointRadius: 3
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { display: true } },
                scales: { y: { beginAtZero: true } }
            }
        });
    }
    
    // Revenue Timeline
    const revenueCtx = document.getElementById('revenueChart')?.getContext('2d');
    if (revenueCtx) {
        const revenueData = {{ revenue_timeline|safe }};
        new Chart(revenueCtx, {
            type: 'bar',
            data: {
                labels: revenueData.map(d => d.date),
                datasets: [{
                    label: 'Revenue ($)',
                    data: revenueData.map(d => d.revenue),
                    backgroundColor: successColor,
                    borderColor: successColor,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { display: true } },
                scales: { y: { beginAtZero: true } }
            }
        });
    }
    
    // Status Distribution
    const statusCtx = document.getElementById('statusChart')?.getContext('2d');
    if (statusCtx) {
        const statusData = {{ status_distribution|safe }};
        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: statusData.map(s => s.status.charAt(0).toUpperCase() + s.status.slice(1)),
                datasets: [{
                    data: statusData.map(s => s.count),
                    backgroundColor: ['#FF9800', '#4CAF50', '#F44336', '#2196F3'],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { position: 'bottom' } }
            }
        });
    }
    
    // Land Status
    const landStatusCtx = document.getElementById('landStatusChart')?.getContext('2d');
    if (landStatusCtx) {
        const landData = {{ land_status|safe }};
        new Chart(landStatusCtx, {
            type: 'pie',
            data: {
                labels: landData.map(s => s.status.charAt(0).toUpperCase() + s.status.slice(1)),
                datasets: [{
                    data: landData.map(s => s.count),
                    backgroundColor: ['#4CAF50', '#F44336'],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { position: 'bottom' } }
            }
        });
    }
    
    // Revenue Chart for Revenue Tab
    const revenueCtx2 = document.getElementById('revenueChart2')?.getContext('2d');
    if (revenueCtx2) {
        const revenueData = {{ revenue_timeline|safe }};
        new Chart(revenueCtx2, {
            type: 'bar',
            data: {
                labels: revenueData.map(d => d.date),
                datasets: [{
                    label: 'Revenue ($)',
                    data: revenueData.map(d => d.revenue),
                    backgroundColor: successColor,
                    borderColor: successColor,
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { display: true } },
                scales: { y: { beginAtZero: true } }
            }
        });
    }
    
    // Land Status Chart for Sites Tab
    const landStatusCtx2 = document.getElementById('landStatusChart2')?.getContext('2d');
    if (landStatusCtx2) {
        const landData = {{ land_status|safe }};
        new Chart(landStatusCtx2, {
            type: 'pie',
            data: {
                labels: landData.map(s => s.status.charAt(0).toUpperCase() + s.status.slice(1)),
                datasets: [{
                    data: landData.map(s => s.count),
                    backgroundColor: ['#4CAF50', '#F44336'],
                    borderColor: '#fff',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: { legend: { position: 'bottom' } }
            }
        });
    }
    
    // Tab Switching Functionality
    document.querySelectorAll('.tab-button').forEach(button => {
        button.addEventListener('click', function() {
            const tabName = this.getAttribute('data-tab');
            
            // Remove active class from all buttons and content
            document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            
            // Add active class to clicked button and corresponding content
            this.classList.add('active');
            document.getElementById(tabName + '-tab').classList.add('active');
        });
    });
</script>
{% endblock %}
